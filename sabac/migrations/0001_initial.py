# Generated by Django 4.2.21 on 2025-08-11 11:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("saler", "Saler"),
                            ("dealer", "Dealer"),
                            ("inspector", "Inspector"),
                            ("admin", "Admin"),
                        ],
                        default="saler",
                        max_length=20,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("adress", models.CharField(max_length=500)),
                ("image", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "plain_password",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Bidding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bid_amount", models.DecimalField(decimal_places=2, max_digits=65)),
                ("bid_date", models.DateField(auto_now_add=True)),
                ("is_accepted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "dealer",
                    models.ForeignKey(
                        limit_choices_to={"role": "dealer"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bids",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Guest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=100)),
                ("is_sold", models.BooleanField(default=False)),
                ("car_name", models.CharField(max_length=100)),
                (
                    "car_variant",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("company", models.CharField(max_length=100)),
                ("year", models.CharField(max_length=20)),
                ("engine_size", models.CharField(max_length=20)),
                ("milage", models.CharField(max_length=100)),
                (
                    "option_type",
                    models.CharField(
                        choices=[
                            ("basic", "BASIC"),
                            ("mid_option", "MID OPTION"),
                            ("full_option", "FULL OPTION"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "paint_condition",
                    models.CharField(
                        choices=[
                            ("original_paint", "ORIGINAL PAINT"),
                            ("partial_repaint", "PARTIAL REPAINT"),
                            ("full_repaint", "FULL REPAINT"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "specs",
                    models.CharField(
                        choices=[
                            ("gcc_specs", "GCC SPECS"),
                            ("non_specs", "NON SPECS"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=100,
                    ),
                ),
                ("photos", models.JSONField(blank=True, null=True)),
                ("inspection_date", models.DateField(blank=True, null=True)),
                (
                    "inspection_time",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_inspection", "In Inspection"),
                            ("await_approval", " Awating Approval"),
                            ("rejected", "Rejected"),
                            ("bidding", "In Bidding"),
                            ("expired", "Expired"),
                            ("sold", "Sold"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                ("is_inspected", models.BooleanField(default=False)),
                ("added_by", models.CharField(blank=True, max_length=50, null=True)),
                ("is_manual", models.BooleanField(default=False)),
                ("is_booked", models.BooleanField(default=False)),
                ("bidding_start_time", models.DateTimeField(blank=True, null=True)),
                ("bidding_end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "demand",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=60, null=True
                    ),
                ),
                (
                    "min_bid_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=60, null=True
                    ),
                ),
                (
                    "inspector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inspector_in_guest",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "winner_dealer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dealer_inventory",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InspectionReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("json_obj", models.JSONField(blank=True, null=True)),
                ("image_urls", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_accepted", models.BooleanField(default=False)),
                ("is_rejected", models.BooleanField(default=False)),
                (
                    "guest_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_inspection_reports",
                        to="sabac.guest",
                    ),
                ),
                (
                    "inspector",
                    models.ForeignKey(
                        limit_choices_to={"role": "inspector"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="saler_car_details",
            fields=[
                ("saler_car_id", models.AutoField(primary_key=True, serialize=False)),
                ("is_sold", models.BooleanField(default=False)),
                ("car_name", models.CharField(max_length=100)),
                (
                    "car_variant",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("company", models.CharField(max_length=100)),
                ("year", models.CharField(max_length=20)),
                ("engine_size", models.CharField(max_length=20)),
                ("milage", models.CharField(max_length=100)),
                (
                    "option_type",
                    models.CharField(
                        choices=[
                            ("basic", "BASIC"),
                            ("mid_option", "MID OPTION"),
                            ("full_option", "FULL OPTION"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "paint_condition",
                    models.CharField(
                        choices=[
                            ("original_paint", "ORIGINAL PAINT"),
                            ("partial_repaint", "PARTIAL REPAINT"),
                            ("full_repaint", "FULL REPAINT"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "specs",
                    models.CharField(
                        choices=[
                            ("gcc_specs", "GCC SPECS"),
                            ("non_specs", "NON SPECS"),
                            ("i_dont_know", "I DONT KNOW"),
                        ],
                        max_length=100,
                    ),
                ),
                ("photos", models.JSONField(blank=True, null=True)),
                (
                    "primary_phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "secondary_phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("inspection_date", models.DateField(blank=True, null=True)),
                (
                    "inspection_time",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_inspection", "In Inspection"),
                            ("await_approval", " Awating Approval"),
                            ("rejected", "Rejected"),
                            ("bidding", "In Bidding"),
                            ("expired", "Expired"),
                            ("sold", "Sold"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                ("is_inspected", models.BooleanField(default=False)),
                ("added_by", models.CharField(blank=True, max_length=50, null=True)),
                ("is_manual", models.BooleanField(default=False)),
                ("is_booked", models.BooleanField(default=False)),
                ("bidding_start_time", models.DateTimeField(blank=True, null=True)),
                ("bidding_end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "demand",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=60, null=True
                    ),
                ),
                (
                    "min_bid_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=60, null=True
                    ),
                ),
                (
                    "inspector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inspector_connected",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owner_car",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "winner_dealer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dealer_inventory_cars",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SelectedSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time_slot", models.TimeField()),
                (
                    "booked_by",
                    models.CharField(
                        choices=[
                            ("seler", "Seller"),
                            ("inspector", "Inspector"),
                            ("guest", "Guest"),
                        ],
                        default="seller",
                        max_length=10,
                    ),
                ),
                (
                    "inspector",
                    models.ForeignKey(
                        limit_choices_to={"role": "inspector"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "saler_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_slots",
                        to="sabac.saler_car_details",
                    ),
                ),
                (
                    "unreg_guest",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sabac.guest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                ("category", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "bid",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bid_acception",
                        to="sabac.bidding",
                    ),
                ),
                (
                    "guest_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="sabac.guest",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifecation",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "saler_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="sabac.saler_car_details",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InspectionReportNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "recepient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inspection_notification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification",
                        to="sabac.inspectionreport",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="inspectionreport",
            name="saler_car",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inspection_reports",
                to="sabac.saler_car_details",
            ),
        ),
        migrations.CreateModel(
            name="DeviceToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_id", models.CharField(max_length=300)),
                ("token", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bidding",
            name="guest_car",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="guest_car_bid",
                to="sabac.guest",
            ),
        ),
        migrations.AddField(
            model_name="bidding",
            name="saler_car",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bids",
                to="sabac.saler_car_details",
            ),
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time_slots", models.JSONField(default=list)),
                (
                    "inspector",
                    models.ForeignKey(
                        limit_choices_to={"role": "inspector"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inspector",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssignSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("inspection_date", models.DateField(blank=True, null=True)),
                (
                    "inspection_time",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("assigned_by", models.CharField(default="inspector", max_length=50)),
                (
                    "car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_slots",
                        to="sabac.saler_car_details",
                    ),
                ),
                (
                    "guest_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_slot_to_guest",
                        to="sabac.guest",
                    ),
                ),
                (
                    "inspector",
                    models.ForeignKey(
                        limit_choices_to={"role": "inspector"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigning_slots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
